#!/bin/bash

set -e

# === Demander l'identifiant et mot de passe admin FRP ===
read -p "Entrez le nom d'utilisateur admin FRP : " FRP_ADMIN_USER
read -s -p "Entrez le mot de passe admin FRP : " FRP_ADMIN_PASSWORD
echo

# === G√©n√©rer un token s√©curis√© pour FRP ===
generate_token() {
  tr -dc 'A-Za-z1-9' < /dev/urandom | head -c 63
}
FRP_TOKEN="$(generate_token)-"

# === Variables ===
SCRIPT_PATH="$(realpath "$0")"
WG_INTERFACE="wg0"
WG_IP="10.55.5.1/24"
WG_PORT=51820
WG_CONFIG="/etc/wireguard/${WG_INTERFACE}.conf"
FRP_DIR="/opt/frp"
FRP_VERSION="0.58.1"
FRP_URL="https://github.com/fatedier/frp/releases/download/v${FRP_VERSION}/frp_${FRP_VERSION}_linux_amd64.tar.gz"
FRPS_PORT=7000
FRPS_DASHBOARD_PORT=7631
BLOCKED_PORTS=(22 23 3389)

# === V√©rification des droits ===
if [ "$EUID" -ne 0 ]; then
  echo "Ce script doit √™tre ex√©cut√© en root." >&2
  exit 1
fi

# === Installer WireGuard et UFW ===
echo "[+] Installation de WireGuard et des outils n√©cessaires..."
apt update
apt install -y wireguard curl ufw

# === G√©n√©ration des cl√©s WireGuard ===
echo "[+] G√©n√©ration des cl√©s WireGuard..."
mkdir -p /etc/wireguard
umask 077
wg genkey | tee /etc/wireguard/privatekey | wg pubkey > /etc/wireguard/publickey
PRIVATE_KEY=$(cat /etc/wireguard/privatekey)

# === Configuration WireGuard ===
echo "[+] Cr√©ation de la configuration WireGuard..."
cat > "$WG_CONFIG" <<EOF
[Interface]
Address = ${WG_IP}
PrivateKey = ${PRIVATE_KEY}
ListenPort = ${WG_PORT}
SaveConfig = true
EOF

chmod 600 "$WG_CONFIG"
systemctl enable wg-quick@$WG_INTERFACE
systemctl start wg-quick@$WG_INTERFACE

# === Pare-feu & IP forwarding ===
echo "[+] Configuration du pare-feu et du routage..."
ufw allow ${WG_PORT}/udp
ufw allow in on wg0
ufw allow out on wg0
ufw --force enable

echo "[+] Blocage des ports sensibles : ${BLOCKED_PORTS[*]}"
for port in "${BLOCKED_PORTS[@]}"; do
    ufw deny $port
done

echo "net.ipv4.ip_forward=1" > /etc/sysctl.d/99-wg-forward.conf
sysctl -p /etc/sysctl.d/99-wg-forward.conf

# === T√©l√©charger et installer FRP ===
echo "[+] Installation de FRP (frps)..."
mkdir -p $FRP_DIR
cd /tmp
curl -L -o frp.tar.gz "$FRP_URL"
tar -xzf frp.tar.gz
cp -f frp_*/frps $FRP_DIR/
rm -rf frp.tar.gz frp_*

# === Cr√©er frps.ini ===
cat > $FRP_DIR/frps.ini <<EOF
[common]
bind_port = ${FRPS_PORT}
bind_addr = 0.0.0.0
dashboard_port = ${FRPS_DASHBOARD_PORT}
dashboard_user = ${FRP_ADMIN_USER}
dashboard_pwd = ${FRP_ADMIN_PASSWORD}
token = ${FRP_TOKEN}
vhost_http_port = 8080
EOF

# === Service systemd pour frps ===
cat > /etc/systemd/system/frps.service <<EOF
[Unit]
Description=FRP Server Service
After=network.target

[Service]
ExecStart=${FRP_DIR}/frps -c ${FRP_DIR}/frps.ini
Restart=on-failure

[Install]
WantedBy=multi-user.target
EOF

systemctl daemon-reexec
systemctl enable frps
systemctl start frps

# === Nettoyage ===
echo "[+] Suppression du script d'installation : ${SCRIPT_PATH}"
apt purge -y curl
rm -f "${SCRIPT_PATH}"

# === R√©sum√© final ===
echo ""
echo "[‚úî] Serveur WireGuard + FRP pr√™t !"
echo "‚Üí WireGuard IP : ${WG_IP}"
echo "‚Üí FRP √©coute sur le port : ${FRPS_PORT}"
echo "‚Üí Dashboard FRP : http://192.168.1.24:${FRPS_DASHBOARD_PORT}"
echo ""
echo "[üîê] Identifiants FRP d√©finis par vous."
echo "[üîë] Token FRP g√©n√©r√© : ${FRP_TOKEN}"
echo ""
echo "[‚ûï] Faites ./add.sh pour ajouter un Client"
echo "[‚ûñ] Faites ./remove.sh pour retirer un Client"
echo "[üõë] Faites ./purge.sh pour supprimer le Proxy"
echo ""

